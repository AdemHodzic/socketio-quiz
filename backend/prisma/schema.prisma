generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// TODO: Replace autouincrement with UUID

model User {
  id                  Int                   @id @default(autoincrement())
  username            String                @unique
  password            String
  salt                String
  MatchUser           MatchUser[]
  MatchQuestion       MatchQuestion[]
  MatchQuestionAnswer MatchQuestionAnswer[]
  Match               Match[]
}

model Answer {
  id         Int     @id @default(autoincrement())
  body       String
  is_correct Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  questionId          Int
  question            Question              @relation(fields: [questionId], references: [id], onDelete: Cascade)
  MatchQuestionAnswer MatchQuestionAnswer[]
}

model Question {
  id   Int    @id @default(autoincrement())
  body String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  answers       Answer[]
  MatchQuestion MatchQuestion[]
}

enum MatchState {
  WAITING
  PLAYING
  FINISHED
  CANCELLED
}

model Match {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int?
  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  MatchUser     MatchUser[]
  MatchQuestion MatchQuestion[]
  state         MatchState
}

model MatchUser {
  matchId Int
  userId  Int
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  match   Match @relation(fields: [matchId], references: [id], onDelete: Cascade)

  @@id([matchId, userId])
}

model MatchQuestion {
  id         Int      @id @default(autoincrement())
  matchId    Int
  questionId Int
  match      Match    @relation(fields: [matchId], references: [id], onDelete: Cascade)
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  updatedAt DateTime @updatedAt

  is_done             Boolean
  // user who answered the question corerctly
  userId              Int?
  user                User?                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  MatchQuestionAnswer MatchQuestionAnswer[]
}

model MatchQuestionAnswer {
  matchQuestionId Int
  answerId        Int
  userId          Int
  matchQuestion   MatchQuestion @relation(fields: [matchQuestionId], references: [id], onDelete: Cascade)
  answer          Answer        @relation(fields: [answerId], references: [id], onDelete: Cascade)
  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([matchQuestionId, answerId, userId])
}
